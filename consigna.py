# üìÇ Estructura del proyecto Gestor de Cat√°logos de Pel√≠culas

# El proyecto est√° organizado de la siguiente manera:

# catalogos/
# Carpeta principal donde se almacenan los distintos cat√°logos de pel√≠culas.

#     PresentacionFinal/
#     Contiene un subcat√°logo con sus propios archivos.

#     portadas/ ‚Üí Carpeta destinada a guardar las im√°genes de portada de las pel√≠culas.

#     catalogo.json ‚Üí Archivo JSON con la informaci√≥n del cat√°logo de pel√≠culas de esta secci√≥n.

#     Terror/
#     Otro subcat√°logo de pel√≠culas, especializado en el g√©nero de terror.

#     portadas/ ‚Üí Carpeta con las portadas de las pel√≠culas de terror.

#     catalogo.json ‚Üí Archivo JSON que almacena los datos del cat√°logo de pel√≠culas de terror.

# catalogo.py
# Script en Python que probablemente maneja la l√≥gica de carga, guardado y gesti√≥n de los cat√°logos.

# interfaz.py
# Archivo encargado de la interfaz gr√°fica, posiblemente construida con PyQt5.

# main.py
# Archivo principal del proyecto. Es muy probable que este sea el punto de entrada para ejecutar la aplicaci√≥n.

# pelicula.py
# Script que podr√≠a definir la clase o estructura de datos de una pel√≠cula (t√≠tulo, g√©nero, portada, etc.).

# LICENSE
# Archivo de licencia del proyecto.

# README.md
# Documento de introducci√≥n y gu√≠a sobre el uso del proyecto.

# requirements.txt
# Archivo con las dependencias necesarias para ejecutar el proyecto. En este caso:

# PyQt5==5.15.7
# Pillow==10.4.0

# PRESENTACI√ìN DEL PROYECTO

# El objetivo consiste en desarrollar un programa que permita llevar un registro de pel√≠culas aplicando conceptos de programaci√≥n orientada a objetos.
# El funcionamiento esperado es el siguiente:
# Al ejecutar el programa se solicita ingresar el nombre del cat√°logo de pel√≠culas:
# Si el cat√°logo de pel√≠culas no existe se crear√° uno nuevo. Este cat√°logo se va a guardar en un archivo txt donde posteriormente se guardar√°n las pel√≠culas. Si el cat√°logo existe se podr√° seguir modificando el archivo.
# Se debe mostrar un men√∫ de opciones, que permita realizar las siguientes operaciones:
# Agregar Pel√≠cula
# Listar Pel√≠culas
# Eliminar cat√°logo pel√≠culas
# Salir

# OBJETIVOS

# Funcionamiento de las opciones:
# Agregar Pel√≠cula: se va a solicitar el nombre de la pel√≠cula y esta pel√≠cula se va a guardar en el archivo txt.
# Listar Pel√≠culas: va a mostrar todas las pel√≠culas del cat√°logo y guardadas en el archivo txt.
# Eliminar cat√°logo: elimina el archivo txt que corresponde al cat√°logo de pel√≠culas.
# Salir: debe finalizar el programa mostrando un mensaje al usuario.
# Implementaci√≥n POO:
# El programa debe implementar programaci√≥n orientada a objetos.
# Se solicita:
# Clase Pelicula.
# Uno de sus atributos debe ser privado.
# Clase CatalogoPelicula.
# atributo nombre
# atributo ruta_archivo
# m√©todos: agregar, listar, eliminar